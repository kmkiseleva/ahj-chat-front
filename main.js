(()=>{"use strict";const e=async e=>{const s=`https://ahj-chat-back.herokuapp.com${e.query}`,t=await fetch(s,{method:e.method,body:e.data?JSON.stringify(e.data):null}),n=await t.json();return e.callback&&e.callback(n),n};class s{create(s,t){return e({method:"POST",query:"/newuser",data:s,callback:t})}}const t=document.getElementById("main");new class{constructor(e){this.container=e,this.api=new s,this.websocket=null,this.userListContainer=document.querySelector(".chat__users"),this.modalForm=document.querySelector(".modal__form"),this.modalInput=document.querySelector(".modal__form .form__input"),this.inputElement=document.querySelector(".form__input"),this.messageContainer=document.querySelector(".chat__messages-container")}init(){this.registerEvents()}registerEvents(){this.modalInput.addEventListener("keydown",(e=>{if(13===e.keyCode){const e={name:this.modalInput.value};this.onEnterChat(e)}})),this.inputElement.addEventListener("keydown",(e=>{13===e.keyCode&&this.sendMessage()}))}async onEnterChat(e){const s=await this.api.create(e);"ok"===s.status?(this.modalForm.classList.add("hidden"),this.user=s.user,this.websocket=new WebSocket("wss://ahj-chat-back.herokuapp.com/chat"),this.websocket.addEventListener("message",(e=>{this.renderMessage(e)})),window.addEventListener("beforeunload",(()=>this.websocket.send(JSON.stringify({type:"exit",user:this.user}))))):(alert("Such nick has already exist! Choose the other one"),this.modalInput.value="")}sendMessage(){const{value:e}=this.inputElement;this.websocket.send(JSON.stringify({type:"send",message:e,user:this.user})),this.inputElement.value="";const s=this.renderYouMessage(e);this.messageContainer.insertAdjacentHTML("beforeend",s)}renderMessage(e){const s=JSON.parse(e.data);if(Array.isArray(s))return this.userListContainer.textContent="",void s.forEach((e=>{if(e.name===this.user.name){const s=this.renderYouHTML(e);this.userListContainer.insertAdjacentHTML("afterbegin",s)}else{const s=this.renderUsersHTML(e);this.userListContainer.insertAdjacentHTML("beforeend",s)}}));if(s.message){if(s.user.name===this.user.name)return;const e=this.renderUsersMessage(s);this.messageContainer.insertAdjacentHTML("beforeend",e)}}renderUsersHTML(e){return`\n    <div class="chat__user" data-user-id=${e.id}>${e.name}</div>\n    `}renderYouHTML(e){return`\n    <div class="chat__user you" data-user-id=${e.id}>You</div>\n    `}renderYouMessage(e){const s=new Date;return`\n    <div class="message yourself">\n                <div class="message__header">You, ${`${s.toLocaleTimeString().slice(0,5)} ${s.toLocaleDateString()} `}</div>\n                <div class="message__text">${e}</div>\n              </div>\n    `}renderUsersMessage(e){const s=new Date,t=`${s.toLocaleTimeString().slice(0,5)} ${s.toLocaleDateString()} `;return`\n    <div class="message">\n                <div class="message__header">${e.user.name}, ${t}</div>\n                <div class="message__text">${e.message}</div>\n              </div>\n    `}}(t).init()})();